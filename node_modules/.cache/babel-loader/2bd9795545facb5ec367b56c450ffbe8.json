{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // Importing `PluralRule` polyfill from a separate package\n// results in a bundle that is larger by 1kB for some reason.\n// export { default as default } from 'intl-plural-rules-polyfill/cardinal'\n\n\nimport PluralRuleFunctions from \"./PluralRuleFunctions\";\nimport getPluralRulesLocale from \"./getPluralRulesLocale\";\n/**\r\n * `Intl.PluralRules` polyfill.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules\r\n */\n\nvar PluralRules = /*#__PURE__*/function () {\n  function PluralRules(locale, options) {\n    _classCallCheck(this, PluralRules);\n\n    var locales = PluralRules.supportedLocalesOf(locale);\n\n    if (locales.length === 0) {\n      throw new RangeError(\"Unsupported locale: \" + locale);\n    }\n\n    if (options && options.type !== \"cardinal\") {\n      throw new RangeError(\"Only \\\"cardinal\\\" \\\"type\\\" is supported\");\n    }\n\n    this.$ = PluralRuleFunctions[getPluralRulesLocale(locales[0])];\n  }\n\n  _createClass(PluralRules, [{\n    key: \"select\",\n    value: function select(number) {\n      return this.$(number);\n    }\n  }], [{\n    key: \"supportedLocalesOf\",\n    value: function supportedLocalesOf(locales) {\n      if (typeof locales === \"string\") {\n        locales = [locales];\n      }\n\n      return locales.filter(function (locale) {\n        return PluralRuleFunctions[getPluralRulesLocale(locale)];\n      });\n    }\n  }]);\n\n  return PluralRules;\n}();\n\nexport { PluralRules as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;EAAA;AACA;AACA;;;AAEA,OAAOA,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA;;;;;IAIqBC,W;AACpB,uBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAAC;;AAC5B,QAAMC,OAAO,GAAGJ,WAAW,CAACK,kBAAZL,CAA+BC,MAA/BD,CAAhB;;AACA,QAAII,OAAO,CAACE,MAARF,KAAmB,CAAvB,EAA0B;AACzB,YAAM,IAAIG,UAAJ,CAAe,yBAAyBN,MAAxC,CAAN;AACA;;AACD,QAAIC,OAAO,IAAIA,OAAO,CAACM,IAARN,KAAiB,UAAhC,EAA4C;AAC3C,YAAM,IAAIK,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,SAAKE,CAAL,GAASX,mBAAmB,CAACC,oBAAoB,CAACK,OAAO,CAAC,CAAD,CAAR,CAArB,CAA5B;AACA;;;;2BACMM,QAAQ;AACd,aAAO,KAAKD,CAAL,CAAOC,MAAP,CAAP;AACA;;;uCACyBN,SAAS;AAClC,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,eAAO,GAAG,CAACA,OAAD,CAAVA;AACA;;AACD,aAAOA,OAAO,CAACO,MAARP,CAAe,kBAAM;AAAA,eAAIN,mBAAmB,CAACC,oBAAoB,CAACE,MAAD,CAArB,CAAvB;AAArB,QAAP;AACA;;;;;;SAnBmBD,W","names":["PluralRuleFunctions","getPluralRulesLocale","PluralRules","locale","options","_classCallCheck","locales","supportedLocalesOf","length","RangeError","type","$","number","filter"],"sources":["E:\\courses\\my_personal_file\\challenges\\comments-section\\client\\node_modules\\relative-time-format\\source\\PluralRules.js"],"sourcesContent":["// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// export { default as default } from 'intl-plural-rules-polyfill/cardinal'\r\n\r\nimport PluralRuleFunctions from \"./PluralRuleFunctions\"\r\nimport getPluralRulesLocale from \"./getPluralRulesLocale\"\r\n\r\n/**\r\n * `Intl.PluralRules` polyfill.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules\r\n */\r\nexport default class PluralRules {\r\n\tconstructor(locale, options) {\r\n\t\tconst locales = PluralRules.supportedLocalesOf(locale)\r\n\t\tif (locales.length === 0) {\r\n\t\t\tthrow new RangeError(\"Unsupported locale: \" + locale)\r\n\t\t}\r\n\t\tif (options && options.type !== \"cardinal\") {\r\n\t\t\tthrow new RangeError(\"Only \\\"cardinal\\\" \\\"type\\\" is supported\")\r\n\t\t}\r\n\t\tthis.$ = PluralRuleFunctions[getPluralRulesLocale(locales[0])]\r\n\t}\r\n\tselect(number) {\r\n\t\treturn this.$(number)\r\n\t}\r\n\tstatic supportedLocalesOf(locales) {\r\n\t\tif (typeof locales === \"string\") {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\t\treturn locales.filter(locale => PluralRuleFunctions[getPluralRulesLocale(locale)])\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}