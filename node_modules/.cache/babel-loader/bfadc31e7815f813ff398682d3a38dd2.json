{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport Info from \"./Info\";\nimport Replies from \"./Replies\";\nimport Reply from \"./Reply\";\nimport Scores from \"./Scores\";\nimport NewComment from \"./NewComment\";\nimport Send from \"./Send\";\nimport Update from \"./Update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    comment,\n    currentUser\n  } = _ref;\n  const [text, setText] = useState(comment.content);\n  const replyRef = useRef();\n\n  const handleText = e => {\n    setText(e.target.value);\n  };\n\n  const handleReply = e => {\n    console.log(\"ref:\", replyRef.current);\n    replyRef.current.parentElement.insertAfter( /*#__PURE__*/_jsxDEV(NewComment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), replyRef.current);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      ref: replyRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-scores\",\n        children: /*#__PURE__*/_jsxDEV(Scores, {\n          score: comment.score,\n          currentUser: currentUser,\n          commentId: comment._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-controllers\",\n          children: [currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              profileUser: \"you\",\n              user: comment.user,\n              createdAt: comment.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              profileUser: \"user\",\n              user: comment.user,\n              createdAt: comment.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-delete\",\n            children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-reply\",\n            children: /*#__PURE__*/_jsxDEV(Reply, {\n              handleReply: handleReply\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            value: text,\n            readOnly: true,\n            onChange: handleText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invisible\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-replies\",\n      children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Replies, {\n        currentUser: currentUser,\n        commentUser: comment.user.username,\n        reply: reply\n      }, reply.id || reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewComment, {\n      currentUser: currentUser,\n      reply: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comment, \"AoH/QAtd20JxL3p6u68KY3+JT00=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Comment.js"],"names":["useState","useRef","Delete","Edit","Info","Replies","Reply","Scores","NewComment","Send","Update","Comment","comment","currentUser","text","setText","content","replyRef","handleText","e","target","value","handleReply","console","log","current","parentElement","insertAfter","score","_id","username","user","createdAt","replies","map","reply","id"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport Info from \"./Info\";\r\nimport Replies from \"./Replies\";\r\nimport Reply from \"./Reply\";\r\nimport Scores from \"./Scores\";\r\nimport NewComment from \"./NewComment\";\r\nimport Send from \"./Send\";\r\nimport Update from \"./Update\";\r\n\r\nexport default function Comment({ comment, currentUser }) {\r\n  const [text, setText] = useState(comment.content);\r\n  const replyRef = useRef();\r\n\r\n  const handleText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleReply = (e) => {\r\n    console.log(\"ref:\", replyRef.current);\r\n    replyRef.current.parentElement.insertAfter(\r\n      <NewComment />,\r\n      replyRef.current\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comment\" ref={replyRef}>\r\n        <div className=\"comment-scores\">\r\n          <Scores\r\n            score={comment.score}\r\n            currentUser={currentUser}\r\n            commentId={comment._id}\r\n          />\r\n        </div>\r\n        <div className=\"comment-info\">\r\n          <div className=\"comment-controllers\">\r\n            {currentUser.username === comment.user.username ? (\r\n              <div className=\"info\">\r\n                <Info\r\n                  profileUser=\"you\"\r\n                  user={comment.user}\r\n                  createdAt={comment.createdAt}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"info\">\r\n                <Info\r\n                  profileUser=\"user\"\r\n                  user={comment.user}\r\n                  createdAt={comment.createdAt}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {currentUser.username === comment.user.username ? (\r\n              <div className=\"comment-delete\">\r\n                <Delete />\r\n                <Edit />\r\n              </div>\r\n            ) : (\r\n              <div className=\"comment-reply\">\r\n                <Reply handleReply={handleReply} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"text\">\r\n            <textarea\r\n              name=\"comment\"\r\n              value={text}\r\n              readOnly={true}\r\n              onChange={handleText}\r\n            />\r\n            <div className=\"invisible\">{text}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"comment-replies\">\r\n        {comment.replies.map((reply) => (\r\n          <Replies\r\n            currentUser={currentUser}\r\n            commentUser={comment.user.username}\r\n            reply={reply}\r\n            key={reply.id || reply._id}\r\n          />\r\n        ))}\r\n      </div>\r\n      <NewComment currentUser={currentUser} reply />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}