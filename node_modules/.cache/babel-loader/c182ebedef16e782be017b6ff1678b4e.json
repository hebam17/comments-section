{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { getSecondsInUnit } from './units';\nimport { getDiffRatioToNextRoundedNumber } from '../round';\nexport default function getStepMinTime(step, _ref) {\n  var prevStep = _ref.prevStep,\n      timestamp = _ref.timestamp,\n      now = _ref.now,\n      future = _ref.future,\n      round = _ref.round;\n  var minTime; // \"threshold_for_xxx\" is a legacy property.\n\n  if (prevStep) {\n    if (prevStep.id || prevStep.unit) {\n      minTime = step[\"threshold_for_\".concat(prevStep.id || prevStep.unit)];\n    }\n  }\n\n  if (minTime === undefined) {\n    // \"threshold\" is a legacy property.\n    if (step.threshold !== undefined) {\n      // \"threshold\" is a legacy name for \"minTime\".\n      minTime = step.threshold; // \"threshold\" function is deprecated.\n\n      if (typeof minTime === 'function') {\n        minTime = minTime(now, future);\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    minTime = step.minTime;\n  } // A deprecated way of specifying a different threshold\n  // depending on the previous step's unit.\n\n\n  if (_typeof(minTime) === 'object') {\n    if (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\n      minTime = minTime[prevStep.id];\n    } else {\n      minTime = minTime.default;\n    }\n  }\n\n  if (typeof minTime === 'function') {\n    minTime = minTime(timestamp, {\n      future: future,\n      getMinTimeForUnit: function getMinTimeForUnit(toUnit, fromUnit) {\n        return _getMinTimeForUnit(toUnit, fromUnit || prevStep && prevStep.formatAs, {\n          round: round\n        });\n      }\n    });\n  } // Evaluate the `test()` function.\n  // `test()` function is deprecated.\n\n\n  if (minTime === undefined) {\n    if (step.test) {\n      if (step.test(timestamp, {\n        now: now,\n        future: future\n      })) {\n        // `0` threshold always passes.\n        minTime = 0;\n      } else {\n        // `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\n        minTime = 9007199254740991; // Number.MAX_SAFE_INTEGER\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    if (prevStep) {\n      if (step.formatAs && prevStep.formatAs) {\n        minTime = _getMinTimeForUnit(step.formatAs, prevStep.formatAs, {\n          round: round\n        });\n      }\n    } else {\n      // The first step's `minTime` is `0` by default.\n      minTime = 0;\n    }\n  } // Warn if no `minTime` was defined or could be deduced.\n\n\n  if (minTime === undefined) {\n    console.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2));\n  }\n\n  return minTime;\n}\n\nfunction _getMinTimeForUnit(toUnit, fromUnit, _ref2) {\n  var round = _ref2.round;\n  var toUnitAmount = getSecondsInUnit(toUnit); // if (!fromUnit) {\n  // \treturn toUnitAmount;\n  // }\n  // if (!fromUnit) {\n  // \tfromUnit = getPreviousUnitFor(toUnit)\n  // }\n\n  var fromUnitAmount;\n\n  if (fromUnit === 'now') {\n    fromUnitAmount = getSecondsInUnit(toUnit);\n  } else {\n    fromUnitAmount = getSecondsInUnit(fromUnit);\n  }\n\n  if (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\n    return toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round));\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,SAAjC;AACA,SAASC,+BAAT,QAAgD,UAAhD;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,QAOZ;AAAA,MANFC,QAME,QANFA,QAME;AAAA,MALFC,SAKE,QALFA,SAKE;AAAA,MAHFC,GAGE,QAHFA,GAGE;AAAA,MAFFC,MAEE,QAFFA,MAEE;AAAA,MADFC,KACE,QADFA,KACE;AACF,MAAIC,OAAJ,CADE,CAEF;;AACA,MAAIL,QAAJ,EAAc;AACb,QAAIA,QAAQ,CAACM,EAATN,IAAeA,QAAQ,CAACO,IAA5B,EAAkC;AACjCF,aAAO,GAAGN,IAAI,yBAAkBC,QAAQ,CAACM,EAATN,IAAeA,QAAQ,CAACO,IAA1C,EAAdF;AACA;AACD;;AACD,MAAIA,OAAO,KAAKG,SAAhB,EAA2B;AAC1B;AACA,QAAIT,IAAI,CAACU,SAALV,KAAmBS,SAAvB,EAAkC;AACjC;AACAH,aAAO,GAAGN,IAAI,CAACU,SAAfJ,CAFiC,CAGjC;;AACA,UAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AAClCA,eAAO,GAAGA,OAAO,CAACH,GAAD,EAAMC,MAAN,CAAjBE;AACA;AACD;AACD;;AACD,MAAIA,OAAO,KAAKG,SAAhB,EAA2B;AAC1BH,WAAO,GAAGN,IAAI,CAACM,OAAfA;AApBC,IAsBF;AACA;;;AACA,MAAIK,QAAOL,OAAP,MAAmB,QAAvB,EAAiC;AAChC,QAAIL,QAAQ,IAAIA,QAAQ,CAACM,EAArBN,IAA2BK,OAAO,CAACL,QAAQ,CAACM,EAAV,CAAPD,KAAyBG,SAAxD,EAAmE;AAClEH,aAAO,GAAGA,OAAO,CAACL,QAAQ,CAACM,EAAV,CAAjBD;AADD,WAEO;AACNA,aAAO,GAAGA,OAAO,CAACM,OAAlBN;AACA;AACD;;AACD,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AAClCA,WAAO,GAAGA,OAAO,CAACJ,SAAD,EAAY;AAC5BE,YAAM,EAANA,MAD4B;AAE5BS,uBAF4B,6BAEVC,MAFU,EAEFC,QAFE,EAEQ;AACnC,eAAOF,kBAAiB,CACvBC,MADuB,EAEvBC,QAAQ,IAAId,QAAQ,IAAIA,QAAQ,CAACe,QAFV,EAGvB;AAAEX,eAAK,EAALA;AAAF,SAHuB,CAAxB;AAKA;AAR2B,KAAZ,CAAjBC;AAhCC,IA2CF;AACA;;;AACA,MAAIA,OAAO,KAAKG,SAAhB,EAA2B;AAC1B,QAAIT,IAAI,CAACiB,IAAT,EAAe;AACd,UAAIjB,IAAI,CAACiB,IAALjB,CAAUE,SAAVF,EAAqB;AACxBG,WAAG,EAAHA,GADwB;AAExBC,cAAM,EAANA;AAFwB,OAArBJ,CAAJ,EAGI;AACH;AACAM,eAAO,GAAG,CAAVA;AALD,aAMO;AACN;AACAA,eAAO,GAAG,gBAAVA,CAFM,CAEqB;AAC3B;AACD;AACD;;AACD,MAAIA,OAAO,KAAKG,SAAhB,EAA2B;AAC1B,QAAIR,QAAJ,EAAc;AACb,UAAID,IAAI,CAACgB,QAALhB,IAAiBC,QAAQ,CAACe,QAA9B,EAAwC;AACvCV,eAAO,GAAGO,kBAAiB,CAACb,IAAI,CAACgB,QAAN,EAAgBf,QAAQ,CAACe,QAAzB,EAAmC;AAAEX,eAAK,EAALA;AAAF,SAAnC,CAA3BC;AACA;AAHF,WAIO;AACN;AACAA,aAAO,GAAG,CAAVA;AACA;AAnEA,IAqEF;;;AACA,MAAIA,OAAO,KAAKG,SAAhB,EAA2B;AAC1BS,WAAO,CAACC,IAARD,CAAa,6DAA6DE,IAAI,CAACC,SAALD,CAAepB,IAAfoB,EAAqB,IAArBA,EAA2B,CAA3BA,CAA1EF;AACA;;AACD,SAAOZ,OAAP;AACA;;AAED,SAASO,kBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,SAAwD;AAAA,MAATV,KAAS,SAATA,KAAS;AACvD,MAAMiB,YAAY,GAAGzB,gBAAgB,CAACiB,MAAD,CAArC,CADuD,CAEvD;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIS,cAAJ;;AACA,MAAIR,QAAQ,KAAK,KAAjB,EAAwB;AACvBQ,kBAAc,GAAG1B,gBAAgB,CAACiB,MAAD,CAAjCS;AADD,SAEO;AACNA,kBAAc,GAAG1B,gBAAgB,CAACkB,QAAD,CAAjCQ;AACA;;AACD,MAAID,YAAY,KAAKb,SAAjBa,IAA8BC,cAAc,KAAKd,SAArD,EAAgE;AAC/D,WAAOa,YAAY,GAAGC,cAAc,IAAI,IAAIzB,+BAA+B,CAACO,KAAD,CAAvC,CAApC;AACA;AACD","names":["getSecondsInUnit","getDiffRatioToNextRoundedNumber","getStepMinTime","step","prevStep","timestamp","now","future","round","minTime","id","unit","undefined","threshold","_typeof","default","getMinTimeForUnit","toUnit","fromUnit","formatAs","test","console","warn","JSON","stringify","toUnitAmount","fromUnitAmount"],"sources":["E:\\courses\\my_personal_file\\challenges\\comments-section\\client\\node_modules\\javascript-time-ago\\source\\steps\\getStepMinTime.js"],"sourcesContent":["import { getSecondsInUnit } from './units'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}