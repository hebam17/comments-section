{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport Info from \"./Info\";\nimport Replies from \"./Replies\";\nimport Reply from \"./Reply\";\nimport Scores from \"./Scores\";\nimport NewComment from \"./NewComment\";\nimport Send from \"./Send\";\nimport Update from \"./Update\";\nimport { handleReply, handleReplyActive } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    comment,\n    currentUser\n  } = _ref;\n  const [text, setText] = useState(comment.content);\n  const [replyComment, setReplyComment] = useState(false);\n\n  const handleText = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-scores\",\n          children: /*#__PURE__*/_jsxDEV(Scores, {\n            score: comment.score,\n            currentUser: currentUser,\n            commentId: comment._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-controllers\",\n            children: [currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                profileUser: \"you\",\n                user: comment.user,\n                createdAt: comment.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                profileUser: \"user\",\n                user: comment.user,\n                createdAt: comment.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-delete\",\n              children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-reply\",\n              children: /*#__PURE__*/_jsxDEV(Reply, {\n                handleReply: () => handleReply(setReplyComment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              value: text,\n              readOnly: true,\n              onChange: handleText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invisible\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), replyComment && /*#__PURE__*/_jsxDEV(NewComment, {\n        currentUser: currentUser,\n        handleReplyActive: txt => {\n          handleReplyActive(setReplyComment, txt, comment, currentUser);\n        },\n        reply: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-replies\",\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Replies, {\n          currentUser: currentUser,\n          commentUser: comment.user.username,\n          reply: reply,\n          handleReplyActive: txt => {\n            handleReplyActive(setReplyComment, txt);\n          }\n        }, reply.id || reply._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Comment, \"vk92EVdd4Zgxwhiy0MUIn9+OkaU=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Comment.js"],"names":["useState","useRef","Delete","Edit","Info","Replies","Reply","Scores","NewComment","Send","Update","handleReply","handleReplyActive","Comment","comment","currentUser","text","setText","content","replyComment","setReplyComment","handleText","e","target","value","score","_id","username","user","createdAt","txt","replies","map","reply","id"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport Info from \"./Info\";\r\nimport Replies from \"./Replies\";\r\nimport Reply from \"./Reply\";\r\nimport Scores from \"./Scores\";\r\nimport NewComment from \"./NewComment\";\r\nimport Send from \"./Send\";\r\nimport Update from \"./Update\";\r\nimport { handleReply, handleReplyActive } from \"../utils\";\r\n\r\nexport default function Comment({ comment, currentUser }) {\r\n  const [text, setText] = useState(comment.content);\r\n  const [replyComment, setReplyComment] = useState(false);\r\n\r\n  const handleText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"comment\">\r\n          <div className=\"comment-scores\">\r\n            <Scores\r\n              score={comment.score}\r\n              currentUser={currentUser}\r\n              commentId={comment._id}\r\n            />\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-controllers\">\r\n              {currentUser.username === comment.user.username ? (\r\n                <div className=\"info\">\r\n                  <Info\r\n                    profileUser=\"you\"\r\n                    user={comment.user}\r\n                    createdAt={comment.createdAt}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"info\">\r\n                  <Info\r\n                    profileUser=\"user\"\r\n                    user={comment.user}\r\n                    createdAt={comment.createdAt}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {currentUser.username === comment.user.username ? (\r\n                <div className=\"comment-delete\">\r\n                  <Delete />\r\n                  <Edit />\r\n                </div>\r\n              ) : (\r\n                <div className=\"comment-reply\">\r\n                  <Reply handleReply={() => handleReply(setReplyComment)} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"text\">\r\n              <textarea\r\n                name=\"comment\"\r\n                value={text}\r\n                readOnly={true}\r\n                onChange={handleText}\r\n              />\r\n              <div className=\"invisible\">{text}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {replyComment && (\r\n          <NewComment\r\n            currentUser={currentUser}\r\n            handleReplyActive={(txt) => {\r\n              handleReplyActive(setReplyComment, txt, comment, currentUser);\r\n            }}\r\n            reply\r\n          />\r\n        )}\r\n        <div className=\"comment-replies\">\r\n          {comment.replies.map((reply) => (\r\n            <Replies\r\n              currentUser={currentUser}\r\n              commentUser={comment.user.username}\r\n              reply={reply}\r\n              key={reply.id || reply._id}\r\n              handleReplyActive={(txt) => {\r\n                handleReplyActive(setReplyComment, txt);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}