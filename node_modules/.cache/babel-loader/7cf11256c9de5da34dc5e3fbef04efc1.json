{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Replies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Scores from \"./Scores\";\nimport Info from \"./Info\";\nimport Reply from \"./Reply\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Replies(_ref) {\n  _s();\n\n  let {\n    reply,\n    currentUser,\n    commentUser\n  } = _ref;\n  const [text, setText] = useState(reply.content);\n  const location = useLocation();\n\n  const replyUserFilter = reply => {\n    if (location.pathname !== \"/\" && reply.user === String) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      console.log(\"hello\");\n\n      if (replyUserFilter(reply)) {\n        try {\n          const user = await axios.get(`/users/user/${reply.user._id || reply.user}`);\n          reply.user = user.data;\n          console.log(\"reply.user:\", reply.user);\n        } catch (err) {\n          console.log(\"err:\", err.message);\n        }\n      }\n    };\n\n    getUser();\n  });\n\n  const handleText = e => {\n    console.log(e.target);\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this) // <div className=\"comment \">\n  //   <div className=\"comment-scores\">\n  //     <Scores\n  //       score={reply.score}\n  //       currentUser={currentUser}\n  //       commentId={reply._id}\n  //     />\n  //   </div>\n  //   <div className=\"comment-info\">\n  //     <div className=\"comment-controllers\">\n  //       {currentUser.username === reply.user.username ? (\n  //         <div className=\"info\">\n  //           <Info\n  //             profileUser=\"you\"\n  //             user={reply.user}\n  //             createdAt={reply.createdAt}\n  //           />\n  //         </div>\n  //       ) : (\n  //         <div className=\"info\">\n  //           <Info\n  //             profileUser=\"user\"\n  //             user={reply.user}\n  //             createdAt={reply.createdAt}\n  //           />\n  //         </div>\n  //       )}\n  //       {currentUser.username === reply.user.username ? (\n  //         <div className=\"comment-delete\">\n  //           <Delete />\n  //           <Edit />\n  //         </div>\n  //       ) : (\n  //         <div className=\"comment-reply\">\n  //           <Reply />\n  //         </div>\n  //       )}\n  //     </div>\n  //     <div className=\"text text-reply\">\n  //       <textarea\n  //         name=\"comment\"\n  //         value={`@${commentUser} ${text}`}\n  //         readOnly={false}\n  //         onChange={handleText}\n  //       />\n  //       <div className=\"invisible\">{`@${commentUser} ${text}`}</div>\n  //     </div>\n  //   </div>\n  // </div>\n  ;\n}\n\n_s(Replies, \"F+rS+3u8oelzpZrJP6Srtq/m/EE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Replies.js"],"names":["useState","useEffect","useLocation","Scores","Info","Reply","Delete","Edit","axios","Replies","reply","currentUser","commentUser","text","setText","content","location","replyUserFilter","pathname","user","String","getUser","console","log","get","_id","data","err","message","handleText","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,OAAsD;AAAA;;AAAA,MAArC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,GAAqC;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACU,KAAK,CAACK,OAAP,CAAhC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,eAAe,GAAIP,KAAD,IAAW;AACjC,QAAIM,QAAQ,CAACE,QAAT,KAAsB,GAAtB,IAA6BR,KAAK,CAACS,IAAN,KAAeC,MAAhD,EAAwD;AACtD,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAND;;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,OAAO,GAAG,YAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAIN,eAAe,CAACP,KAAD,CAAnB,EAA4B;AAC1B,YAAI;AACF,gBAAMS,IAAI,GAAG,MAAMX,KAAK,CAACgB,GAAN,CAChB,eAAcd,KAAK,CAACS,IAAN,CAAWM,GAAX,IAAkBf,KAAK,CAACS,IAAK,EAD3B,CAAnB;AAGAT,UAAAA,KAAK,CAACS,IAAN,GAAaA,IAAI,CAACO,IAAlB;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bb,KAAK,CAACS,IAAjC;AACD,SAND,CAME,OAAOQ,GAAP,EAAY;AACZL,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,GAAG,CAACC,OAAxB;AACD;AACF;AACF,KAbD;;AAcAP,IAAAA,OAAO;AACR,GAhBQ,CAAT;;AAkBA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACxBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,MAAd;AACAjB,IAAAA,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDF;AAoDD;;GAtFuBvB,O;UAELP,W;;;KAFKO,O","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Scores from \"./Scores\";\r\nimport Info from \"./Info\";\r\nimport Reply from \"./Reply\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Replies({ reply, currentUser, commentUser }) {\r\n  const [text, setText] = useState(reply.content);\r\n  const location = useLocation();\r\n\r\n  const replyUserFilter = (reply) => {\r\n    if (location.pathname !== \"/\" && reply.user === String) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      console.log(\"hello\");\r\n      if (replyUserFilter(reply)) {\r\n        try {\r\n          const user = await axios.get(\r\n            `/users/user/${reply.user._id || reply.user}`\r\n          );\r\n          reply.user = user.data;\r\n          console.log(\"reply.user:\", reply.user);\r\n        } catch (err) {\r\n          console.log(\"err:\", err.message);\r\n        }\r\n      }\r\n    };\r\n    getUser();\r\n  });\r\n\r\n  const handleText = (e) => {\r\n    console.log(e.target);\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>Hello</div>\r\n    // <div className=\"comment \">\r\n    //   <div className=\"comment-scores\">\r\n    //     <Scores\r\n    //       score={reply.score}\r\n    //       currentUser={currentUser}\r\n    //       commentId={reply._id}\r\n    //     />\r\n    //   </div>\r\n    //   <div className=\"comment-info\">\r\n    //     <div className=\"comment-controllers\">\r\n    //       {currentUser.username === reply.user.username ? (\r\n    //         <div className=\"info\">\r\n    //           <Info\r\n    //             profileUser=\"you\"\r\n    //             user={reply.user}\r\n    //             createdAt={reply.createdAt}\r\n    //           />\r\n    //         </div>\r\n    //       ) : (\r\n    //         <div className=\"info\">\r\n    //           <Info\r\n    //             profileUser=\"user\"\r\n    //             user={reply.user}\r\n    //             createdAt={reply.createdAt}\r\n    //           />\r\n    //         </div>\r\n    //       )}\r\n    //       {currentUser.username === reply.user.username ? (\r\n    //         <div className=\"comment-delete\">\r\n    //           <Delete />\r\n    //           <Edit />\r\n    //         </div>\r\n    //       ) : (\r\n    //         <div className=\"comment-reply\">\r\n    //           <Reply />\r\n    //         </div>\r\n    //       )}\r\n    //     </div>\r\n    //     <div className=\"text text-reply\">\r\n    //       <textarea\r\n    //         name=\"comment\"\r\n    //         value={`@${commentUser} ${text}`}\r\n    //         readOnly={false}\r\n    //         onChange={handleText}\r\n    //       />\r\n    //       <div className=\"invisible\">{`@${commentUser} ${text}`}</div>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}