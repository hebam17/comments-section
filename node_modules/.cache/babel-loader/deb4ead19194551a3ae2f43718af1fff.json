{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport Info from \"./Info\";\nimport Replies from \"./Replies\";\nimport Reply from \"./Reply\";\nimport Scores from \"./Scores\";\nimport Send from \"./Send\";\nimport Update from \"./Update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    comment,\n    currentUser\n  } = _ref;\n  const [text, setText] = useState(comment.content);\n\n  const handleText = e => {\n    // console.log(e.target);\n    setText(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"comment:\", comment.user.username, \"currentUser:\", currentUser.username);\n  }, [currentUser, comment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-scores\",\n        children: /*#__PURE__*/_jsxDEV(Scores, {\n          score: comment.score,\n          currentUser: currentUser,\n          commentId: comment._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-controllers\",\n          children: [currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              profileUser: \"you\",\n              user: comment.user,\n              createdAt: comment.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              profileUser: \"user\",\n              user: comment.user,\n              createdAt: comment.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), currentUser.username === comment.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-delete\",\n            children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-reply\",\n            children: /*#__PURE__*/_jsxDEV(Reply, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            value: text,\n            readOnly: false,\n            onChange: handleText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invisible\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Comment, \"zcntNZ8oG0FoElv5Wj/SmId81Ks=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Comment.js"],"names":["useState","useEffect","Delete","Edit","Info","Replies","Reply","Scores","Send","Update","Comment","comment","currentUser","text","setText","content","handleText","e","target","value","console","log","user","username","score","_id","createdAt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport Info from \"./Info\";\r\nimport Replies from \"./Replies\";\r\nimport Reply from \"./Reply\";\r\nimport Scores from \"./Scores\";\r\nimport Send from \"./Send\";\r\nimport Update from \"./Update\";\r\n\r\nexport default function Comment({ comment, currentUser }) {\r\n  const [text, setText] = useState(comment.content);\r\n  const handleText = (e) => {\r\n    // console.log(e.target);\r\n    setText(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    console.log(\r\n      \"comment:\",\r\n      comment.user.username,\r\n      \"currentUser:\",\r\n      currentUser.username\r\n    );\r\n  }, [currentUser, comment]);\r\n  return (\r\n    <>\r\n      <div className=\"comment\">\r\n        <div className=\"comment-scores\">\r\n          <Scores\r\n            score={comment.score}\r\n            currentUser={currentUser}\r\n            commentId={comment._id}\r\n          />\r\n        </div>\r\n        <div className=\"comment-info\">\r\n          <div className=\"comment-controllers\">\r\n            {currentUser.username === comment.user.username ? (\r\n              <div className=\"info\">\r\n                <Info\r\n                  profileUser=\"you\"\r\n                  user={comment.user}\r\n                  createdAt={comment.createdAt}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"info\">\r\n                <Info\r\n                  profileUser=\"user\"\r\n                  user={comment.user}\r\n                  createdAt={comment.createdAt}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {currentUser.username === comment.user.username ? (\r\n              <div className=\"comment-delete\">\r\n                <Delete />\r\n                <Edit />\r\n              </div>\r\n            ) : (\r\n              <div className=\"comment-reply\">\r\n                <Reply />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"text\">\r\n            <textarea\r\n              name=\"comment\"\r\n              value={text}\r\n              readOnly={false}\r\n              onChange={handleText}\r\n            />\r\n            <div className=\"invisible\">{text}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"comment-replies\">\r\n        {comment.replies.map((reply) => (\r\n          <Replies\r\n            currentUser={currentUser}\r\n            commentUser={comment.user.username}\r\n            comment={reply}\r\n            key={reply.id || reply._id}\r\n          />\r\n        ))}\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}