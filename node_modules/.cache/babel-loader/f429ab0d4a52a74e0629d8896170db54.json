{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport flashData from \"../data.json\";\nimport NewComment from \"./NewComment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const params = useParams();\n  const location = useLocation();\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false); // const Username = username || params.username;\n\n  useEffect(() => {\n    setLoading(true);\n\n    const getUser = async () => {\n      if (location.pathname === \"/\") {\n        setUser(flashData.currentUser);\n      } else {\n        const res = await axios.get(`/users/${params.username}`);\n        setUser(res.data);\n      }\n    };\n\n    getUser();\n  }, []);\n  useEffect(() => {\n    const getComments = async () => {\n      if (location.pathname === \"/\") {\n        setComments(flashData.comments);\n      } else {\n        // console.log(\"params:\", params);\n        const res = await axios.get(`/comments/all`);\n        setComments(res.data);\n        setLoading(false);\n      }\n    };\n\n    getComments();\n  }, []);\n  console.log(\"comments:\", comments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      currentUser: user,\n      comment: comment\n    }, comment.id || comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(NewComment, {\n      currentUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"NYaeCw1Ob44tX4RQYSALeaY9JyI=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Comments.js"],"names":["useState","useEffect","useParams","useLocation","Comment","flashData","NewComment","axios","Comments","username","params","location","comments","setComments","user","setUser","loading","setLoading","getUser","pathname","currentUser","res","get","data","getComments","console","log","map","comment","id","_id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,OAAgC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7C,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC,CAL6C,CAO7C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAIP,QAAQ,CAACQ,QAAT,KAAsB,GAA1B,EAA+B;AAC7BJ,QAAAA,OAAO,CAACV,SAAS,CAACe,WAAX,CAAP;AACD,OAFD,MAEO;AACL,cAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,UAASZ,MAAM,CAACD,QAAS,EAApC,CAAlB;AACAM,QAAAA,OAAO,CAACM,GAAG,CAACE,IAAL,CAAP;AACD;AACF,KAPD;;AAQAL,IAAAA,OAAO;AACR,GAXQ,EAWN,EAXM,CAAT;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,WAAW,GAAG,YAAY;AAC9B,UAAIb,QAAQ,CAACQ,QAAT,KAAsB,GAA1B,EAA+B;AAC7BN,QAAAA,WAAW,CAACR,SAAS,CAACO,QAAX,CAAX;AACD,OAFD,MAEO;AACL;AACA,cAAMS,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,eAAX,CAAlB;AACAT,QAAAA,WAAW,CAACQ,GAAG,CAACE,IAAL,CAAX;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KATD;;AAUAO,IAAAA,WAAW;AACZ,GAZQ,EAYN,EAZM,CAAT;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBd,QAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACGI,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAGNJ,QAAQ,CAACe,GAAT,CAAcC,OAAD,iBACX,QAAC,OAAD;AACE,MAAA,WAAW,EAAEd,IADf;AAEE,MAAA,OAAO,EAAEc;AAFX,OAGOA,OAAO,CAACC,EAAR,IAAcD,OAAO,CAACE,GAH7B;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ,eAaE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEhB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApDuBN,Q;UACPN,S,EACEC,W;;;KAFKK,Q","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Comment from \"./Comment\";\r\nimport flashData from \"../data.json\";\r\nimport NewComment from \"./NewComment\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Comments({ username }) {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const [comments, setComments] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const Username = username || params.username;\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getUser = async () => {\r\n      if (location.pathname === \"/\") {\r\n        setUser(flashData.currentUser);\r\n      } else {\r\n        const res = await axios.get(`/users/${params.username}`);\r\n        setUser(res.data);\r\n      }\r\n    };\r\n    getUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n      if (location.pathname === \"/\") {\r\n        setComments(flashData.comments);\r\n      } else {\r\n        // console.log(\"params:\", params);\r\n        const res = await axios.get(`/comments/all`);\r\n        setComments(res.data);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getComments();\r\n  }, []);\r\n  console.log(\"comments:\", comments);\r\n  return (\r\n    <div className=\"comments\">\r\n      {loading ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        comments.map((comment) => (\r\n          <Comment\r\n            currentUser={user}\r\n            comment={comment}\r\n            key={comment.id || comment._id}\r\n          />\r\n        ))\r\n      )}\r\n\r\n      <NewComment currentUser={user} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}