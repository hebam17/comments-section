{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Replies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Scores from \"./Scores\";\nimport Info from \"./Info\";\nimport Reply from \"./Reply\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Replies(_ref) {\n  _s();\n\n  let {\n    reply,\n    currentUser,\n    commentUser\n  } = _ref;\n  const [text, setText] = useState(reply.content);\n  const location = useLocation();\n  useEffect(() => {\n    const getUser = async () => {\n      console.log(\"hello\");\n\n      if (location.pathname !== \"/\" && typeof reply.user === String) {\n        console.log(\"typeof reply.user:\", typeof reply.user);\n        const user = await axios.get(`/users/user/${reply.user}`);\n        console.log(\"user:\", user);\n        reply.user = user.data;\n        console.log(\"reply.user:\", reply.user);\n        console.log(\"reply:\", reply);\n      }\n    };\n\n    getUser();\n  }, []);\n\n  const handleText = e => {\n    console.log(e.target);\n    setText(e.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>Hello</div>\n    _jsxDEV(\"div\", {\n      className: \"comment \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Replies, \"F+rS+3u8oelzpZrJP6Srtq/m/EE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Replies.js"],"names":["useState","useEffect","useLocation","Scores","Info","Reply","Delete","Edit","axios","Replies","reply","currentUser","commentUser","text","setText","content","location","getUser","console","log","pathname","user","String","get","data","handleText","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,OAAsD;AAAA;;AAAA,MAArC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,GAAqC;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACU,KAAK,CAACK,OAAP,CAAhC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,OAAO,GAAG,YAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAIH,QAAQ,CAACI,QAAT,KAAsB,GAAtB,IAA6B,OAAOV,KAAK,CAACW,IAAb,KAAsBC,MAAvD,EAA+D;AAC7DJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,OAAOT,KAAK,CAACW,IAA/C;AACA,cAAMA,IAAI,GAAG,MAAMb,KAAK,CAACe,GAAN,CAAW,eAAcb,KAAK,CAACW,IAAK,EAApC,CAAnB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AACAX,QAAAA,KAAK,CAACW,IAAN,GAAaA,IAAI,CAACG,IAAlB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,KAAK,CAACW,IAAjC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,KAAtB;AACD;AACF,KAVD;;AAWAO,IAAAA,OAAO;AACR,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACxBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,MAAd;AACAb,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAHD;;AAKA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAqDD;;GA7EuBnB,O;UAELP,W;;;KAFKO,O","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Scores from \"./Scores\";\r\nimport Info from \"./Info\";\r\nimport Reply from \"./Reply\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Replies({ reply, currentUser, commentUser }) {\r\n  const [text, setText] = useState(reply.content);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      console.log(\"hello\");\r\n      if (location.pathname !== \"/\" && typeof reply.user === String) {\r\n        console.log(\"typeof reply.user:\", typeof reply.user);\r\n        const user = await axios.get(`/users/user/${reply.user}`);\r\n        console.log(\"user:\", user);\r\n        reply.user = user.data;\r\n        console.log(\"reply.user:\", reply.user);\r\n        console.log(\"reply:\", reply);\r\n      }\r\n    };\r\n    getUser();\r\n  }, []);\r\n\r\n  const handleText = (e) => {\r\n    console.log(e.target);\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    // <div>Hello</div>\r\n    <div className=\"comment \">\r\n      <div>Hello</div>\r\n      {/* <div className=\"comment-scores\">\r\n        <Scores\r\n          score={reply.score}\r\n          currentUser={currentUser}\r\n          commentId={reply._id}\r\n        />\r\n      </div>\r\n      <div className=\"comment-info\">\r\n        <div className=\"comment-controllers\">\r\n          {currentUser.username === reply.user.username ? (\r\n            <div className=\"info\">\r\n              <Info\r\n                profileUser=\"you\"\r\n                user={reply.user}\r\n                createdAt={reply.createdAt}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"info\">\r\n              <Info\r\n                profileUser=\"user\"\r\n                user={reply.user}\r\n                createdAt={reply.createdAt}\r\n              />\r\n            </div>\r\n          )}\r\n          {currentUser.username === reply.user.username ? (\r\n            <div className=\"comment-delete\">\r\n              <Delete />\r\n              <Edit />\r\n            </div>\r\n          ) : (\r\n            <div className=\"comment-reply\">\r\n              <Reply />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"text text-reply\">\r\n          <textarea\r\n            name=\"comment\"\r\n            value={`@${commentUser} ${text}`}\r\n            readOnly={false}\r\n            onChange={handleText}\r\n          />\r\n          <div className=\"invisible\">{`@${commentUser} ${text}`}</div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}