{"ast":null,"code":"var _jsxFileName = \"E:\\\\courses\\\\my_personal_file\\\\challenges\\\\comments-section\\\\client\\\\src\\\\components\\\\Replies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Scores from \"./Scores\";\nimport Info from \"./Info\";\nimport Reply from \"./Reply\";\nimport Delete from \"./Delete\";\nimport Update from \"./Update\";\nimport Edit from \"./Edit\";\nimport NewComment from \"./NewComment\";\nimport { handleReply, handleReplyActive, handleEditComment, handleUpdateReply } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Replies(_ref) {\n  _s();\n\n  let {\n    reply,\n    currentUser,\n    commentUser,\n    comment\n  } = _ref;\n  const [text, setText] = useState(reply.content);\n  const [replyComment, setReplyComment] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [displayModal, setDisplayModal] = useState(\"\");\n  const textRef = useRef();\n  const deleteRef = useRef();\n  useEffect(() => {\n    if (deleteRef) {\n      try {\n        window.onclick = e => {\n          if (e.target.isEqualNode(deleteRef.current.firstElementChild)) {\n            console.log(\"Any thing\");\n            console.log(deleteRef.current.style.display);\n            setDisplayModal(\"none\");\n            deleteRef.current.style.display = \"none\";\n          }\n        };\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }, [deleteRef, displayModal]);\n\n  const handleText = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {\n      ref: deleteRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-scores\",\n          children: /*#__PURE__*/_jsxDEV(Scores, {\n            score: reply.score,\n            currentUser: currentUser,\n            commentId: reply._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-controllers\",\n            children: [currentUser.username === reply.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                profileUser: \"you\",\n                user: reply.user,\n                createdAt: reply.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                profileUser: \"user\",\n                user: reply.user,\n                createdAt: reply.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), currentUser.username === reply.user.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-delete\",\n              children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Edit, {\n                handleEditComment: () => {\n                  handleEditComment(textRef, setUpdate);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-reply\",\n              children: /*#__PURE__*/_jsxDEV(Reply, {\n                handleReply: () => handleReply(setReplyComment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text text-reply\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              value: text,\n              readOnly: false,\n              onChange: handleText,\n              ref: textRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invisible\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), update && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-update\",\n            children: /*#__PURE__*/_jsxDEV(Update, {\n              handleUpdateReply: () => handleUpdateReply(reply, comment, currentUser, text)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), replyComment && /*#__PURE__*/_jsxDEV(NewComment, {\n        currentUser: currentUser,\n        reply: true,\n        handleReplyActive: txt => handleReplyActive(setReplyComment, txt, reply, currentUser)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Replies, \"l6klwehdsS9O51cGJSssE9yR+cg=\");\n\n_c = Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["E:/courses/my_personal_file/challenges/comments-section/client/src/components/Replies.js"],"names":["useState","useEffect","useRef","Scores","Info","Reply","Delete","Update","Edit","NewComment","handleReply","handleReplyActive","handleEditComment","handleUpdateReply","Replies","reply","currentUser","commentUser","comment","text","setText","content","replyComment","setReplyComment","update","setUpdate","displayModal","setDisplayModal","textRef","deleteRef","window","onclick","e","target","isEqualNode","current","firstElementChild","console","log","style","display","err","message","handleText","value","score","_id","username","user","createdAt","txt"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport Scores from \"./Scores\";\r\nimport Info from \"./Info\";\r\nimport Reply from \"./Reply\";\r\nimport Delete from \"./Delete\";\r\nimport Update from \"./Update\";\r\nimport Edit from \"./Edit\";\r\nimport NewComment from \"./NewComment\";\r\nimport {\r\n  handleReply,\r\n  handleReplyActive,\r\n  handleEditComment,\r\n  handleUpdateReply,\r\n} from \"../utils\";\r\n\r\nexport default function Replies({ reply, currentUser, commentUser, comment }) {\r\n  const [text, setText] = useState(reply.content);\r\n  const [replyComment, setReplyComment] = useState(false);\r\n  const [update, setUpdate] = useState(false);\r\n  const [displayModal, setDisplayModal] = useState(\"\");\r\n  const textRef = useRef();\r\n\r\n  const deleteRef = useRef();\r\n  useEffect(() => {\r\n    if (deleteRef) {\r\n      try {\r\n        window.onclick = (e) => {\r\n          if (e.target.isEqualNode(deleteRef.current.firstElementChild)) {\r\n            console.log(\"Any thing\");\r\n            console.log(deleteRef.current.style.display);\r\n            setDisplayModal(\"none\");\r\n            deleteRef.current.style.display = \"none\";\r\n          }\r\n        };\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  }, [deleteRef, displayModal]);\r\n\r\n  const handleText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteModal ref={deleteRef} />\r\n\r\n      <div>\r\n        <div className=\"comment \">\r\n          <div className=\"comment-scores\">\r\n            <Scores\r\n              score={reply.score}\r\n              currentUser={currentUser}\r\n              commentId={reply._id}\r\n            />\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-controllers\">\r\n              {currentUser.username === reply.user.username ? (\r\n                <div className=\"info\">\r\n                  <Info\r\n                    profileUser=\"you\"\r\n                    user={reply.user}\r\n                    createdAt={reply.createdAt}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"info\">\r\n                  <Info\r\n                    profileUser=\"user\"\r\n                    user={reply.user}\r\n                    createdAt={reply.createdAt}\r\n                  />\r\n                </div>\r\n              )}\r\n              {currentUser.username === reply.user.username ? (\r\n                <div className=\"comment-delete\">\r\n                  <Delete />\r\n                  <Edit\r\n                    handleEditComment={() => {\r\n                      handleEditComment(textRef, setUpdate);\r\n                    }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"comment-reply\">\r\n                  <Reply handleReply={() => handleReply(setReplyComment)} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"text text-reply\">\r\n              <textarea\r\n                name=\"comment\"\r\n                value={text}\r\n                readOnly={false}\r\n                onChange={handleText}\r\n                ref={textRef}\r\n              />\r\n              <div className=\"invisible\">{text}</div>\r\n            </div>\r\n            {update && (\r\n              <div className=\"comment-update\">\r\n                <Update\r\n                  handleUpdateReply={() =>\r\n                    handleUpdateReply(reply, comment, currentUser, text)\r\n                  }\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {replyComment && (\r\n          <NewComment\r\n            currentUser={currentUser}\r\n            reply={true}\r\n            handleReplyActive={(txt) =>\r\n              handleReplyActive(setReplyComment, txt, reply, currentUser)\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}